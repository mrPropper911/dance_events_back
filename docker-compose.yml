version: '3.7'
# Define services
services:
  # App backend service
  app-ver:
    # Configuration for building the docker image for the backend service
    build:
      context: dance_events # Use an image built from the specified dockerfile in the `polling-app-server` directory.
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    env_file:
      - .env
    environment: # Pass environment variables to the service
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - db # This service depends on mysql. Start that first.
    networks: # Networks to join (Services on the same network can communicate with each other using their username)
      - backend

  # Database Service (Mysql)
  db:
    container_name: db
    image: mysql
    ports:
      - "3307:3306"
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: 'dancer'
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backend

  # Administrator Service (phpMyAdmin)
  phpmyadmin:
    container_name: pma
    image: phpmyadmin/phpmyadmin
    ports:
      - "8081:80"
    restart: always
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    depends_on:
      - db
    networks:
      - backend
# Volumes
volumes:
  db-data:

networks:
  backend:
